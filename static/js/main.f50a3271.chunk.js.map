{"version":3,"sources":["QuoteBox.js","utils.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteBox","useState","allQuotes","setAllQuotes","text","author","currentQuote","setCurrentQuote","getNewQuote","min","max","index","length","Math","floor","random","console","log","useEffect","fetch","then","response","json","data","setNewQuote","newQuote","id","onClick","target","rel","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAwDeA,MArDf,WACC,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,CAAEG,KAAM,GAAIC,OAAQ,KAArE,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAc,WACnB,ICRoBC,EAAKC,EDQnBC,GCRcF,EDQO,ECRFC,EDQKR,EAAUU,OCPlCC,KAAKC,MAAMD,KAAKE,UAAYL,EAAMD,GAAOA,IDU/C,OAFAO,QAAQC,IAAIN,GACKT,EAAUS,IAK5BO,qBAAU,WACTC,MAAM,+BACJC,MAAK,SAAUC,GACf,OAAOA,EAASC,UAEhBF,MAAK,SAAUG,GACfP,QAAQC,IAAIM,GACZpB,EAAaoB,QAEb,IAEHL,qBAAU,WACTM,MACE,CAACtB,IAGJ,IAAMsB,EAAc,WACnB,IAAMC,EAAWjB,IACjBQ,QAAQC,IAAI,YAAaQ,GACrBA,GACqB,OAApBA,EAASpB,SACZoB,EAASpB,OAAS,WAGpBE,EAAgBkB,IAGjB,OACC,sBAAKC,GAAG,YAAR,UACEpB,GAAgB,qBAAIoB,GAAG,OAAP,cAAgBpB,EAAaF,KAA7B,OAChBE,GAAgB,qBAAIoB,GAAG,SAAP,eAAmBpB,EAAaD,UACjD,wBAAQsB,QAASH,EAAaE,GAAG,YAAjC,uBACCpB,GAAgB,mBAAGsB,OAAO,SAC1BC,IAAI,aACJC,KAAI,gDAA2CxB,EAAaF,KAAxD,cAAkEE,EAAaD,QACnFqB,GAAG,cAHa,6BErCLK,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.f50a3271.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { randomNumber } from './utils'\r\n\r\nfunction QuoteBox() {\r\n\tconst [allQuotes, setAllQuotes] = useState([])\r\n\tconst [currentQuote, setCurrentQuote] = useState({ text: \"\", author: \"\" })\r\n\r\n\tconst getNewQuote = () => {\r\n\t\tconst index = randomNumber(0, allQuotes.length)\r\n\t\tconsole.log(index)\r\n\t\tconst newQuote = allQuotes[index]\r\n\t\treturn newQuote\r\n\t}\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(\"https://type.fit/api/quotes\")\r\n\t\t\t.then(function (response) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then(function (data) {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tsetAllQuotes(data);\r\n\t\t\t})\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetNewQuote();\r\n\t}, [allQuotes])\r\n\r\n\r\n\tconst setNewQuote = () => {\r\n\t\tconst newQuote = getNewQuote();\r\n\t\tconsole.log(\"new quote\", newQuote)\r\n\t\tif (newQuote) {\r\n\t\t\tif (newQuote.author === null) {\r\n\t\t\t\tnewQuote.author = \"Unknown\"\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetCurrentQuote(newQuote);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"quote-box\">\r\n\t\t\t{currentQuote && <h2 id=\"text\">\"{currentQuote.text}\"</h2>}\r\n\t\t\t{currentQuote && <h3 id=\"author\">- {currentQuote.author}</h3>}\r\n\t\t\t<button onClick={setNewQuote} id=\"new-quote\">New quote</button>\r\n\t\t\t{currentQuote && <a target=\"_blank\"\r\n\t\t\t\trel=\"noreferrer\"\r\n\t\t\t\thref={`https://twitter.com/intent/tweet?text=${currentQuote.text} - ${currentQuote.author}`}\r\n\t\t\t\tid=\"tweet-quote\"\r\n\t\t\t>Tweet quote</a>}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QuoteBox;\r\n","const randomNumber = (min, max) => {\r\n\treturn Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nexport { randomNumber }","\nimport './App.css';\nimport QuoteBox from './QuoteBox'\n\nfunction App() {\n  return (\n    <QuoteBox />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}